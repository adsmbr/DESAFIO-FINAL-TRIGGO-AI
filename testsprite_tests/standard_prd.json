{
  "meta": {
    "project": "Health Insights Brasil Data Pipeline",
    "date": "2025-09-10",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "A robust data engineering solution for Health Insights Brasil that ingests, transforms, and models public health data from DataSUS, focusing on hospital bed occupancy and related datasets. The platform enables accessible, reliable, and performant data for stakeholders to generate actionable health insights.",
  "core_goals": [
    "Ingest raw public health data from DataSUS efficiently and reliably into a data lake environment.",
    "Build a comprehensive dimensional data model (star schema) for health data analysis using dbt.",
    "Implement a layered data pipeline architecture (Bronze, Silver, Gold) for data transformation and enrichment.",
    "Ensure data quality through automated tests validating integrity, uniqueness, and business rules.",
    "Leverage Snowflake as the data warehouse platform with advanced features like Time Travel and Zero-Copy Cloning.",
    "Provide a plan and partial implementation for data pipeline orchestration and automation.",
    "Demonstrate innovation by proposing and optionally implementing additional features such as epidemiological trend detection or dashboards."
  ],
  "key_features": [
    "COVID19 Data Staging Layer that cleanses and standardizes multi-year hospital bed occupancy data.",
    "Data Integration Layer that enriches and unifies occupancy data before final modeling.",
    "Dimensional Models for time, geography, health units, and occupation types following star schema design.",
    "Central Fact Table capturing hospital bed occupancy metrics supporting incremental loads.",
    "Automated Data Quality Testing framework checking for future-dated entries, uniqueness, and validity of critical fields.",
    "Schema Generation Macros in dbt for dynamic and reusable schema management.",
    "API endpoints providing access to staging data, dimensional data, fact data, integration layer data, and test results for programmatic consumption."
  ],
  "user_flow_summary": [
    "Data ingestion simulates downloading and loading raw DataSUS datasets into the Bronze (staging) layer stored on Snowflake.",
    "Bronze layer performs cleansing, standardization, and null handling to produce clean raw data tables.",
    "Silver (integration) layer unifies and enriches the cleaned datasets into a consolidated intermediate table.",
    "Gold layer implements dimensional and fact tables in a star schema for analytical queries.",
    "Automated tests run during dbt model execution to validate data quality and integrity.",
    "Data consumers (analysts and dashboards) query the dimensional models and fact tables to generate insights.",
    "Plan for orchestration includes workflows to schedule and automate data ingestion, transformation, and testing."
  ],
  "validation_criteria": [
    "Successful ingestion of DataSUS datasets into staged Snowflake tables with accurate raw data representation.",
    "Dimension and fact models correctly structured as star schema supporting relevant health analytics.",
    "Comprehensive dbt tests executed with zero failures ensuring data quality constraints.",
    "Use of Snowflake features demonstrated with documented usage of Time Travel or Zero-Copy Cloning.",
    "Clear documentation of pipeline architecture, model definitions, tests and justification of design decisions.",
    "Demonstrated pipeline orchestration plan with evidence of simple workflow or task implementations.",
    "Innovative features, if implemented, correctly integrated and producing meaningful analytical or visualization insights."
  ],
  "code_summary": {
    "tech_stack": [
      "SQL",
      "dbt",
      "Snowflake",
      "YAML",
      "Jinja2"
    ],
    "features": [
      {
        "name": "COVID19 Data Staging Layer",
        "description": "Bronze layer that ingests and cleans raw hospital bed occupancy data from 2020, 2021, and 2022, standardizing column names and handling null values",
        "files": [
          "models/staging/stg_leito_ocupacao_2020.sql",
          "models/staging/stg_leito_ocupacao_2021.sql",
          "models/staging/stg_leito_ocupacao_2022.sql",
          "models/staging/stg_leito_ocupacao_consolidado.sql",
          "models/staging/sources.yml"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "COVID19 Data Staging",
            "description": "Data transformation layer for hospital bed occupancy data",
            "version": "1.0.0"
          },
          "paths": {
            "/staging/bed-occupancy": {
              "get": {
                "summary": "Get consolidated bed occupancy data",
                "description": "Returns cleaned and standardized hospital bed occupancy data from all years",
                "responses": {
                  "200": {
                    "description": "Successful response",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id_registro": {
                              "type": "string"
                            },
                            "data_notificacao": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "cnes": {
                              "type": "string"
                            },
                            "ocupacao_covid_cli": {
                              "type": "integer"
                            },
                            "ocupacao_covid_uti": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Data Warehouse Dimensions",
        "description": "Gold layer dimensional models including time, location, health units, and occupation types for analytical queries",
        "files": [
          "models/dimensions/dim_tempo.sql",
          "models/dimensions/dim_localidade.sql",
          "models/dimensions/dim_unidade_saude.sql",
          "models/dimensions/dim_cnes.sql",
          "models/dimensions/dim_ocupacao_tipo.sql",
          "models/dimensions/dim_data.sql"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Dimensional Models",
            "description": "Star schema dimensions for COVID-19 analytics",
            "version": "1.0.0"
          },
          "paths": {
            "/dimensions/time": {
              "get": {
                "summary": "Get time dimension data",
                "description": "Returns detailed time dimension with day, month, year, quarter information",
                "responses": {
                  "200": {
                    "description": "Time dimension data"
                  }
                }
              }
            },
            "/dimensions/location": {
              "get": {
                "summary": "Get geographic dimension data",
                "description": "Returns state and municipality information for geographic analysis",
                "responses": {
                  "200": {
                    "description": "Location dimension data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Hospital Bed Occupancy Facts",
        "description": "Central fact table with hospital bed occupancy metrics, supporting incremental loads and star schema analytics",
        "files": [
          "models/facts/fact_ocupacao_leitos.sql"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Bed Occupancy Facts",
            "description": "Fact table for hospital bed occupancy analytics",
            "version": "1.0.0"
          },
          "paths": {
            "/facts/bed-occupancy": {
              "get": {
                "summary": "Get bed occupancy facts",
                "description": "Returns aggregated bed occupancy metrics with dimensional keys",
                "responses": {
                  "200": {
                    "description": "Bed occupancy fact data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Data Integration Layer",
        "description": "Silver layer intermediate models that unify and enrich data before final dimensional modeling",
        "files": [
          "models/intermediate/int_leitos_ocupacao_unificado.sql"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Data Integration",
            "description": "Intermediate data processing layer",
            "version": "1.0.0"
          },
          "paths": {
            "/integration/unified-occupancy": {
              "get": {
                "summary": "Get unified occupancy data",
                "description": "Returns integrated and enriched bed occupancy data",
                "responses": {
                  "200": {
                    "description": "Unified occupancy data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Data Quality Testing",
        "description": "Automated data quality tests ensuring data integrity, uniqueness, and business rule compliance",
        "files": [
          "tests/test_no_future_dates.sql",
          "schema.yml"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Data Quality Tests",
            "description": "Automated testing framework for data quality assurance",
            "version": "1.0.0"
          },
          "paths": {
            "/tests/data-quality": {
              "get": {
                "summary": "Run data quality tests",
                "description": "Executes all configured data quality tests and returns results",
                "responses": {
                  "200": {
                    "description": "Test results"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Schema Generation Macros",
        "description": "dbt macros for dynamic schema naming and code reusability across the data pipeline",
        "files": [
          "macros/generate_schema_name.sql"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Schema Macros",
            "description": "Reusable macros for schema management",
            "version": "1.0.0"
          },
          "paths": {
            "/macros/schema-generation": {
              "get": {
                "summary": "Generate schema names",
                "description": "Dynamically generates schema names based on environment and configuration",
                "responses": {
                  "200": {
                    "description": "Generated schema name"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
